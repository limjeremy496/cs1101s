//q1

function flatten_list(xs){
    return accumulate(append,
                     null, 
                     xs);
}




const LoL = list(list(1, 2), list(3, 4, 5, 6), null, list(7, 8, 9));
flatten_list(LoL);
// Returns list(1, 2, 3, 4, 5, 6, 7, 8, 9)

//q2

//is_pair || is_null 
//can replace is_list

function tree_sum(tree){
    return is_null(tree)
        ? 0
        : (is_list(head(tree))
            ? tree_sum(head(tree))
            : head(tree)) //1
            +
            tree_sum(tail(tree)) //2
        ;
}


const my_tree = list(1, list(2, list(3, 4), 5), list(6, 7));
tree_sum(my_tree);
// Returns 28


//q3
